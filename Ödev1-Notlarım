using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class CharacterController : MonoBehaviour
{
    [SerializeField] private float speed = 2f;
    [SerializeField] private float jumpForce = 3f;
    private float MoveDirection;

    private bool grounded;
    private bool start;
    private bool jumping;
   
    private Rigidbody2D _r2d;
    private Animator _animator;
    private SpriteRenderer _spriteRenderer;

    private void Awake()
    {
        _r2d = GetComponent<Rigidbody2D>();
        _animator = GetComponent<Animator>();
        _spriteRenderer = GetComponent<SpriteRenderer>();

        grounded = true;
        
    }
    
    void Update()
    {
        if (grounded == true && (Input.GetKey(KeyCode.A) || Input.GetKey(KeyCode.D)))
        {
            if (Input.GetKey(KeyCode.A))
            {
                MoveDirection = -1f;
                speed = 4f;
                _spriteRenderer.flipX = true;
                _animator.SetFloat("speed", speed);
                
            }else if (Input.GetKey(KeyCode.D))
            {
                MoveDirection = 1f;
                speed = 4f;
                _spriteRenderer.flipX = false;
                _animator.SetFloat("speed", speed);
                
            }
        }else if(grounded == true)
        {
            speed = 0f;
            _animator.SetFloat("speed", 0f);
        }

        if (grounded == true && Input.GetKey("space"))
        {
            jumping = true;
            grounded = false;
            jumpForce = 300f;
            _animator.SetTrigger("Jump");
        }
        
        
    }

    private void OnCollisionEnter2D(Collision2D collision)
    {
        if (collision.gameObject.CompareTag("Floor"))
        {
            _animator.SetBool("Grounded", true);
            grounded = true;
        }
    }

    private void FixedUpdate()
    {
      
        
        _r2d.velocity = new Vector2(speed*MoveDirection, _r2d.velocity.y);
     
        
        if (jumping == true)
        {
            _r2d.AddForce(new Vector2(0f, jumpForce));

            jumping = false;
        }

    }
}
